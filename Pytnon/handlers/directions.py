from aiogram import types
from aiogram.dispatcher import FSMContext
from bot_instance import bot
from keyboards import start_keyboard, institutes_keyboard, back_keyboard, back_inline_keyboard
from states import MenuStates, DirectonsStates
from db import Institutes, Directions, Focus


async def directions_menu(message: types, state: FSMContext):
    await DirectonsStates.MENU.set()
    await bot.send_message(message.chat.id, "–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –º–µ–Ω—é –æ–±–∑–æ—Ä–∞ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–π!",
                           reply_markup=types.ReplyKeyboardRemove())
    await bot.send_message(message.chat.id, "üè¢ –í—ã–±–µ—Ä–µ—Ç–µ –∏–Ω—Å—Ç–∏—Ç—É—Ç(—Ñ–∞–∫—É–ª—å—Ç–µ—Ç):", reply_markup=institutes_keyboard)


async def process_directions_menu(callback_query: types.CallbackQuery, state: FSMContext):
    instituteDB = Institutes()
    institutes_ids = instituteDB.get_ids()
    if (int(callback_query.data),) in institutes_ids:
        await DirectonsStates.DIRECTIONS.set()
        directionDB = Directions()
        directions = directionDB.get_names_by_institute(callback_query.data)
        directions_keyboard = types.InlineKeyboardMarkup()
        for i in range(len(directions)):
            directions_keyboard.add(types.InlineKeyboardButton(directions[i][0], callback_data=f'{i + 1}'))
        directions_keyboard.add(types.InlineKeyboardButton("–ù–∞–∑–∞–¥", callback_data="404"))
        await bot.send_message(callback_query.from_user.id, "–í—ã–±–µ—Ä–µ—Ç–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ:", reply_markup=directions_keyboard)

    if callback_query.data == "404":
        await MenuStates.MAIN_MENU.set()
        await bot.send_message(callback_query.from_user.id, "–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é. –í—ã–±–µ—Ä–µ—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
                               reply_markup=start_keyboard)


async def show_directions(callback_query: types.CallbackQuery, state: FSMContext):
    directionsDB = Directions()
    directions = directionsDB.get_ids()
    if (int(callback_query.data),) in directions:
        focusDB = Focus()
        focus = focusDB.get_names_by_direction(callback_query.data)
        focus_keyboard = types.InlineKeyboardMarkup()
        for i in range(len(focus)):
            focus_keyboard.add(types.InlineKeyboardButton(focus[i][0], callback_data=f'{focus[i][1]}'))
        focus_keyboard.add(types.InlineKeyboardButton("–ù–∞–∑–∞–¥", callback_data="404"))
        await DirectonsStates.FOCUS.set()
        await bot.send_message(callback_query.from_user.id, "–í—ã–±–µ—Ä–µ—Ç–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ—Å—Ç—å:", reply_markup=focus_keyboard)

    if callback_query.data == "404":
        await MenuStates.MAIN_MENU.set()
        await bot.send_message(callback_query.from_user.id, "–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é. –í—ã–±–µ—Ä–µ—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
                               reply_markup=start_keyboard)


async def show_focus(callback_query: types.CallbackQuery, state: FSMContext):
    focusDB = Focus()
    focus = focusDB.get_all_ids()
    print(callback_query.data, focus)
    if (int(callback_query.data),) in focus:
        info_json = focusDB.get_info_by_id(callback_query.data)
        message = (f"<b>üîπ –ù–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ:</b>\n{info_json['direction']}\n"
                   f"<b>üîπ –ù–∞–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ—Å—Ç—å:</b>\n{info_json['focus']}\n"
                   f"<b>üè¢ –ò–Ω—Å—Ç–∏—Ç—É—Ç:</b>\n{info_json['institute']}\n\n"
                   f"üìå –ü—Ä–æ—Ö–æ–¥–Ω–æ–π –±–∞–ª–ª –Ω–∞ –±—é–¥–∂–µ—Ç –ø—Ä–æ—à–ª–æ–≥–æ –≥–æ–¥–∞: <b>{info_json['passing_points']}</b>\n"
                   f"üìå –ü—Ä–æ—Ö–æ–¥–Ω–æ–π –±–∞–ª–ª –Ω–∞ –ø–ª–∞—Ç–Ω–æ–µ –ø—Ä–æ—à–ª–æ–≥–æ –≥–æ–¥–∞: <b>{info_json['passing_points_contract']}</b>\n"
                   f"‚úèÔ∏è –ù–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ø—Ä–µ–¥–º–µ—Ç—ã –Ω–∞ –ï–ì–≠: {info_json['subjects']}\n"
                   f"üí≥ –¶–µ–Ω–∞ –ø–ª–∞—Ç–Ω–æ–≥–æ –∑–∞ —Å–µ–º–µ—Å—Ç—Ä: <b>{info_json['price']}</b>\n\n\n"
                   f"üß∞ –û–±—â–∞—è —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∞: {info_json['specification']}\n"
                   f"üìã –£—á–µ–±–Ω—ã–π –ø–ª–∞–Ω: {info_json['learning_plan']}\n"
                   f"üóì –ö–∞–ª–µ–Ω–¥–∞—Ä–Ω—ã–π –≥—Ä–∞—Ñ–∏–∫: {info_json['calendar_chedule']}\n"
                   f"üìÑ –î–æ–∫—É–º–µ–Ω—Ç—ã –¥–∏—Å—Ü–∏–ø–ª–∏–Ω: {info_json['documents']}\n"
                   )

        await bot.send_message(callback_query.from_user.id, message, parse_mode="HTML",
                               reply_markup=back_inline_keyboard)

    if callback_query.data == "404":
        await MenuStates.MAIN_MENU.set()
        await bot.send_message(callback_query.from_user.id, "–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é. –í—ã–±–µ—Ä–µ—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
                               reply_markup=start_keyboard)